# Auto generated by Consul template

global
    daemon
    spread-checks 2
    user          haproxy
    group         haproxy
    maxconn       8192
    stats         socket /var/lib/haproxy/stats.sock group haproxy mode 660 level admin
    chroot        /var/lib/haproxy

defaults
    log        {{ or (env "HAPROXY_LOG") "global" }}
    option     dontlognull
    option     log-separate-errors
    option     dontlog-normal
    option     httplog

    option     redispatch
    # https://cbonte.github.io/haproxy-dconv/1.8/configuration.html#4-timeout%20check
    ## HTTP
    # timeout http-requests 10s
    # timeout client 20s
    # timeout connect 4s
    # timeout server  30s
    # timeout http-keep-alive  4s
    ## TCP
    # timeout client 1m
    # timeout connect 4s
    # timeout server  1m
    # timeout client-fin 1s
    # timeout server-fin 1s
    timeout    connect 5s
    timeout    check   5s
    timeout    client  120s
    timeout    server  120s
    balance    {{ or (env "HAPROXY_BALANCE") "roundrobin" }}

{{ if env "HAPROXY_STATS" }}
listen stats
    bind      0.0.0.0:3212
    mode      http
    stats     enable
    stats     refresh   10s
    stats     show-legends
    stats     uri /
{{ end }}

{{ range $i := loop 0 30 -}}{{ if (env (printf "SERVICE_NAME_%d" $i)) }}
{{ $ServiceName := (env (printf "SERVICE_NAME_%d" $i)) | replaceAll "\"" "" -}}
{{ $ServicePort := (env (printf "SERVICE_PORT_%d" $i)) | replaceAll "\"" "" -}}
{{ $ServiceMode := or (env (printf "SERVICE_MODE_%d" $i) | replaceAll "\"" "") "http" }}
{{ $ServiceBalance := or (env (printf "SERVICE_BALANCE_%d" $i) | replaceAll "\"" "") "roundrobin" }}
{{ $TagContains:= (env (printf "TAG_CONTAINS_%d" $i)) | replaceAll "\"" "" -}}
{{ $TagRegex:= (env (printf "TAG_REGEX_%d" $i)) | replaceAll "\"" "" -}}
{{ $ServiceOptions := or (env (printf "SERVICE_OPTIONS_%d" $i) | replaceAll "\"" "") "check inter 60s fastinter 5s downinter 8s rise 3 fall 2" }}

backend {{ $ServiceName }}
    mode {{ $ServiceMode }}
    balance {{ $ServiceBalance }}
    #TODO: option {{ $ServiceOptions }} tcplog or httplog
    {{ range service ( printf "%s" $ServiceName) }}
    server {{.ID}}_{{.Address}}:{{.Port}} {{.Address}}:{{.Port}} {{ $ServiceOptions }}
    {{ end }}
frontend {{ $ServiceName }}
    mode {{ $ServiceMode }}
    bind localhost:{{ $ServicePort }}
    default_backend {{ $ServiceName }}
{{ end }}{{- end}}
